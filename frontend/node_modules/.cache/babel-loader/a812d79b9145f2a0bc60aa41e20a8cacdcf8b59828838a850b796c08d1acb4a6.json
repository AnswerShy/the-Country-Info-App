{"ast":null,"code":"var _jsxFileName = \"/media/wisp/The Second Disk/stuff/pets_codes/workTestApp/frontend/src/pages/CountryList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport CountryWidget from \"../components/CountryWidget\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountryList() {\n  _s();\n  const [countryListInfo, setCountryList] = useState(null);\n  useEffect(() => {\n    fetch(`http://localhost:3000/api/getAvailableCountries`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }).then(data => {\n      setCountryList(data);\n    }).catch(error => {\n      throw new Error(error);\n    });\n  }, []);\n  if (!countryListInfo) {\n    console.log(\"sad\");\n  }\n  const list = countryListInfo.map((element, index) => /*#__PURE__*/_jsxDEV(CountryWidget, {\n    name: element.name,\n    code: element.countryCode\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: list\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(CountryList, \"KGr9s9nMW+/M5hhhQ/43f1Hp7uI=\");\n_c = CountryList;\nvar _c;\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"names":["useEffect","useState","CountryWidget","jsxDEV","_jsxDEV","CountryList","_s","countryListInfo","setCountryList","fetch","then","response","ok","Error","status","json","data","catch","error","console","log","list","map","element","index","name","code","countryCode","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/media/wisp/The Second Disk/stuff/pets_codes/workTestApp/frontend/src/pages/CountryList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport CountryWidget from \"../components/CountryWidget\"\n\nexport default function CountryList() {\n    const [countryListInfo, setCountryList] = useState(null);\n\n    useEffect(() => {\n        fetch(`http://localhost:3000/api/getAvailableCountries`)\n            .then(response => {\n                if(!response.ok) {\n                    throw new Error(response.status)\n                }\n                return response.json()\n            })\n            .then(data => {\n                setCountryList(data)\n            })\n            .catch(error => {\n                throw new Error(error)\n            })\n    }, [])\n\n    if(!countryListInfo) {\n        console.log(\"sad\")\n    }\n\n    const list = countryListInfo.map((element, index) => (\n        <CountryWidget key={index} name={element.name} code={element.countryCode}></CountryWidget>\n    ))\n\n    return (\n        <div>{list}</div>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,eAAe,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExDD,SAAS,CAAC,MAAM;IACZS,KAAK,CAAC,iDAAiD,CAAC,CACnDC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAG,CAACA,QAAQ,CAACC,EAAE,EAAE;QACb,MAAM,IAAIC,KAAK,CAACF,QAAQ,CAACG,MAAM,CAAC;MACpC;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;MACVR,cAAc,CAACQ,IAAI,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZ,MAAM,IAAIL,KAAK,CAACK,KAAK,CAAC;IAC1B,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,IAAG,CAACX,eAAe,EAAE;IACjBY,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EACtB;EAEA,MAAMC,IAAI,GAAGd,eAAe,CAACe,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC5CpB,OAAA,CAACF,aAAa;IAAauB,IAAI,EAAEF,OAAO,CAACE,IAAK;IAACC,IAAI,EAAEH,OAAO,CAACI;EAAY,GAArDH,KAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAgE,CAC5F,CAAC;EAEF,oBACI3B,OAAA;IAAA4B,QAAA,EAAMX;EAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEzB;AAACzB,EAAA,CA9BuBD,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}