{"ast":null,"code":"var _jsxFileName = \"/media/wisp/The Second Disk/stuff/pets_codes/workTestApp/frontend/src/components/CountryPage_Population.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nexport default function CountryPage_Population({\n  data\n}) {\n  _s();\n  useEffect(() => {\n    if (!data || data.length === 0 || data.length !== undefined) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"None Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 20\n      }, this);\n    } else {\n      const xValues = data.map(item => item.year);\n      const yValues = data.map(item => item.value);\n      console.log(xValues);\n      const existingChart = Chart.getChart(\"myChart\");\n      if (existingChart) {\n        existingChart.destroy();\n      }\n      new Chart(\"myChart\", {\n        type: \"line\",\n        data: {\n          labels: xValues,\n          datasets: [{\n            fill: false,\n            lineTension: 0,\n            backgroundColor: \"rgba(0,0,255,1.0)\",\n            borderColor: \"rgba(0,0,255,0.1)\",\n            data: yValues\n          }]\n        },\n        options: {\n          legend: {\n            display: false\n          },\n          scales: {\n            y: {\n              min: Math.min(yValues),\n              max: Math.max(yValues)\n            }\n          }\n        },\n        height: 250,\n        width: 250\n      });\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\",\n      style: {\n        width: \"100%\",\n        maxWidth: \"700px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(CountryPage_Population, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CountryPage_Population;\nvar _c;\n$RefreshReg$(_c, \"CountryPage_Population\");","map":{"version":3,"names":["useEffect","Chart","registerables","jsxDEV","_jsxDEV","Fragment","_Fragment","register","CountryPage_Population","data","_s","length","undefined","children","fileName","_jsxFileName","lineNumber","columnNumber","xValues","map","item","year","yValues","value","console","log","existingChart","getChart","destroy","type","labels","datasets","fill","lineTension","backgroundColor","borderColor","options","legend","display","scales","y","min","Math","max","height","width","id","style","maxWidth","_c","$RefreshReg$"],"sources":["/media/wisp/The Second Disk/stuff/pets_codes/workTestApp/frontend/src/components/CountryPage_Population.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { Chart, registerables } from \"chart.js\";\n\nChart.register(...registerables);\n\nexport default function CountryPage_Population({ data }) {\n    useEffect(() => {\n        if (!data || data.length === 0 || data.length !== undefined) {\n            return <div>None Data</div>\n        }\n        else {\n            const xValues = data.map(item => item.year);\n            const yValues = data.map(item => item.value);\n\n            console.log(xValues)\n\n            const existingChart = Chart.getChart(\"myChart\");\n\n            if (existingChart) {\n                existingChart.destroy();\n            }\n\n            new Chart(\"myChart\", {\n                type: \"line\",\n                data: {\n                    labels: xValues,\n                    datasets: [{\n                        fill: false,\n                        lineTension: 0,\n                        backgroundColor: \"rgba(0,0,255,1.0)\",\n                        borderColor: \"rgba(0,0,255,0.1)\",\n                        data: yValues\n                    }]\n                },\n                options: {\n                    legend: { display: false },\n                    scales: {\n                        y: {\n                            min: Math.min(yValues),\n                            max: Math.max(yValues)\n                        }\n                    }\n                },\n                height: 250,\n                width: 250\n            });\n        }\n    }, [data]);\n\n    return (\n        <>\n            <canvas id=\"myChart\" style={{ width: \"100%\", maxWidth: \"700px\" }}></canvas>\n        </>\n    );\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,KAAK,EAAEC,aAAa,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhDL,KAAK,CAACM,QAAQ,CAAC,GAAGL,aAAa,CAAC;AAEhC,eAAe,SAASM,sBAAsBA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACrDV,SAAS,CAAC,MAAM;IACZ,IAAI,CAACS,IAAI,IAAIA,IAAI,CAACE,MAAM,KAAK,CAAC,IAAIF,IAAI,CAACE,MAAM,KAAKC,SAAS,EAAE;MACzD,oBAAOR,OAAA;QAAAS,QAAA,EAAK;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAC/B,CAAC,MACI;MACD,MAAMC,OAAO,GAAGT,IAAI,CAACU,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;MAC3C,MAAMC,OAAO,GAAGb,IAAI,CAACU,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,KAAK,CAAC;MAE5CC,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;MAEpB,MAAMQ,aAAa,GAAGzB,KAAK,CAAC0B,QAAQ,CAAC,SAAS,CAAC;MAE/C,IAAID,aAAa,EAAE;QACfA,aAAa,CAACE,OAAO,CAAC,CAAC;MAC3B;MAEA,IAAI3B,KAAK,CAAC,SAAS,EAAE;QACjB4B,IAAI,EAAE,MAAM;QACZpB,IAAI,EAAE;UACFqB,MAAM,EAAEZ,OAAO;UACfa,QAAQ,EAAE,CAAC;YACPC,IAAI,EAAE,KAAK;YACXC,WAAW,EAAE,CAAC;YACdC,eAAe,EAAE,mBAAmB;YACpCC,WAAW,EAAE,mBAAmB;YAChC1B,IAAI,EAAEa;UACV,CAAC;QACL,CAAC;QACDc,OAAO,EAAE;UACLC,MAAM,EAAE;YAAEC,OAAO,EAAE;UAAM,CAAC;UAC1BC,MAAM,EAAE;YACJC,CAAC,EAAE;cACCC,GAAG,EAAEC,IAAI,CAACD,GAAG,CAACnB,OAAO,CAAC;cACtBqB,GAAG,EAAED,IAAI,CAACC,GAAG,CAACrB,OAAO;YACzB;UACJ;QACJ,CAAC;QACDsB,MAAM,EAAE,GAAG;QACXC,KAAK,EAAE;MACX,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACpC,IAAI,CAAC,CAAC;EAEV,oBACIL,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACIT,OAAA;MAAQ0C,EAAE,EAAC,SAAS;MAACC,KAAK,EAAE;QAAEF,KAAK,EAAE,MAAM;QAAEG,QAAQ,EAAE;MAAQ;IAAE;MAAAlC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC,gBAC7E,CAAC;AAEX;AAACP,EAAA,CAjDuBF,sBAAsB;AAAAyC,EAAA,GAAtBzC,sBAAsB;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}