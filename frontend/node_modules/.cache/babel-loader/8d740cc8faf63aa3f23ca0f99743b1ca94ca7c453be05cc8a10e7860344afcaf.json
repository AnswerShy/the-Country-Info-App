{"ast":null,"code":"var _s = $RefreshSig$();\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountryList() {\n  _s();\n  const [countryInfo, setCountryInfo] = useState([]);\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_GET_COUNTRY_LIST_BASE_URL}/`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n    }).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(CountryList, \"0bdMgcajpoUPlWGYjZB9OCOF15g=\");\n_c = CountryList;\nvar _c;\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"names":["CountryList","_s","countryInfo","setCountryInfo","useState","useEffect","fetch","process","env","REACT_APP_GET_COUNTRY_LIST_BASE_URL","then","response","ok","Error","status","data","_jsxDEV","_Fragment","_c","$RefreshReg$"],"sources":["/media/wisp/The Second Disk/stuff/pets_codes/workTestApp/frontend/src/pages/CountryList.jsx"],"sourcesContent":["export default function CountryList() {\n    const [countryInfo, setCountryInfo] = useState([]);\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_GET_COUNTRY_LIST_BASE_URL}/`)\n        .then(response => {\n            if(!response.ok) {\n                throw new Error(response.status)\n            }\n        })\n        .then(data => {\n            setCountryInfo(data)\n        })\n    }, [])\n\n    return (\n        <></>\n    )\n}"],"mappings":";;AAAA,eAAe,SAASA,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACZC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,mCAAmC,GAAG,CAAC,CAC3DC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAG,CAACA,QAAQ,CAACC,EAAE,EAAE;QACb,MAAM,IAAIC,KAAK,CAACF,QAAQ,CAACG,MAAM,CAAC;MACpC;IACJ,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACVZ,cAAc,CAACY,IAAI,CAAC;IACxB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIC,OAAA,CAAAC,SAAA,mBAAI,CAAC;AAEb;AAAChB,EAAA,CAlBuBD,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}